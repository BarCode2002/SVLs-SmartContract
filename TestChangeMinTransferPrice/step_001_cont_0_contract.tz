parameter (or (or (or (or (address %changeAdmin1) (address %changeAdmin2)) (or (address %changeAdmin3) (address %changeAdmin4))) (or (or (mutez %changeMinTransferPrice) (mutez %changeMintPrice)) (or (mutez %changeRequestFee) (nat %changeSplit)))) (or (or (or (pair %changeTransferPrice (mutez %price) (string %svl_key)) (pair %mint (string %VIN) (pair (string %brand) (pair (list %curr_owner_info string) (pair (string %model) (pair (string %svl_key) (pair (mutez %svl_price) (string %year)))))))) (or (string %ownerAcceptTransferRequest) (string %ownerClearTransferRequest))) (or (or (string %requestTransfer) (string %requesterClearTransferRequest)) (or (string %transfer) (pair %update (string %VIN) (pair (string %brand) (pair (list %curr_owner_info string) (pair (string %model) (pair (string %svl_key) (string %year))))))))));
storage   (pair (address %admin1) (pair (address %admin2) (pair (address %admin3) (pair (address %admin4) (pair (mutez %minTransferPrice) (pair (mutez %mintPrice) (pair (mutez %requestFee) (pair (nat %split) (big_map %svls string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))))))))))));
code
  {
    UNPAIR;     # @parameter : @storage
    IF_LEFT
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    # == changeAdmin1 ==
                    # assert sp.sender == self.data.admin1, "Must be admin" # @parameter%changeAdmin1 : @storage
                    DUP 2;      # @storage : @parameter%changeAdmin1 : @storage
                    CAR;        # address : @parameter%changeAdmin1 : @storage
                    SENDER;     # @sender : address : @parameter%changeAdmin1 : @storage
                    COMPARE;    # int : @parameter%changeAdmin1 : @storage
                    EQ;         # bool : @parameter%changeAdmin1 : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeAdmin1 : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeAdmin1 : @storage
                    # self.data.admin1 = newAdmin # @parameter%changeAdmin1 : @storage
                    UPDATE 1;   # @storage
                  }
                  {
                    # == changeAdmin2 ==
                    # assert sp.sender == self.data.admin2, "Must be admin" # @parameter%changeAdmin2 : @storage
                    DUP 2;      # @storage : @parameter%changeAdmin2 : @storage
                    GET 3;      # address : @parameter%changeAdmin2 : @storage
                    SENDER;     # @sender : address : @parameter%changeAdmin2 : @storage
                    COMPARE;    # int : @parameter%changeAdmin2 : @storage
                    EQ;         # bool : @parameter%changeAdmin2 : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeAdmin2 : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeAdmin2 : @storage
                    # self.data.admin2 = newAdmin # @parameter%changeAdmin2 : @storage
                    UPDATE 3;   # @storage
                  }; # @storage
              }
              {
                IF_LEFT
                  {
                    # == changeAdmin3 ==
                    # assert sp.sender == self.data.admin3, "Must be admin" # @parameter%changeAdmin3 : @storage
                    DUP 2;      # @storage : @parameter%changeAdmin3 : @storage
                    GET 5;      # address : @parameter%changeAdmin3 : @storage
                    SENDER;     # @sender : address : @parameter%changeAdmin3 : @storage
                    COMPARE;    # int : @parameter%changeAdmin3 : @storage
                    EQ;         # bool : @parameter%changeAdmin3 : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeAdmin3 : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeAdmin3 : @storage
                    # self.data.admin3 = newAdmin # @parameter%changeAdmin3 : @storage
                    UPDATE 5;   # @storage
                  }
                  {
                    # == changeAdmin4 ==
                    # assert sp.sender == self.data.admin4, "Must be admin" # @parameter%changeAdmin4 : @storage
                    DUP 2;      # @storage : @parameter%changeAdmin4 : @storage
                    GET 7;      # address : @parameter%changeAdmin4 : @storage
                    SENDER;     # @sender : address : @parameter%changeAdmin4 : @storage
                    COMPARE;    # int : @parameter%changeAdmin4 : @storage
                    EQ;         # bool : @parameter%changeAdmin4 : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeAdmin4 : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeAdmin4 : @storage
                    # self.data.admin4 = newAdmin # @parameter%changeAdmin4 : @storage
                    UPDATE 7;   # @storage
                  }; # @storage
              }; # @storage
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    # == changeMinTransferPrice ==
                    # assert sp.sender == self.data.admin1 or sp.sender == self.data.admin2 or sp.sender == self.data.admin3 or sp.sender == self.data.admin4, "Must be admin" # @parameter%changeMinTransferPrice : @storage
                    DUP 2;      # @storage : @parameter%changeMinTransferPrice : @storage
                    CAR;        # address : @parameter%changeMinTransferPrice : @storage
                    SENDER;     # @sender : address : @parameter%changeMinTransferPrice : @storage
                    COMPARE;    # int : @parameter%changeMinTransferPrice : @storage
                    EQ;         # bool : @parameter%changeMinTransferPrice : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeMinTransferPrice : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeMinTransferPrice : @storage
                        GET 3;      # address : @parameter%changeMinTransferPrice : @storage
                        SENDER;     # @sender : address : @parameter%changeMinTransferPrice : @storage
                        COMPARE;    # int : @parameter%changeMinTransferPrice : @storage
                        EQ;         # bool : @parameter%changeMinTransferPrice : @storage
                      }; # bool : @parameter%changeMinTransferPrice : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeMinTransferPrice : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeMinTransferPrice : @storage
                        GET 5;      # address : @parameter%changeMinTransferPrice : @storage
                        SENDER;     # @sender : address : @parameter%changeMinTransferPrice : @storage
                        COMPARE;    # int : @parameter%changeMinTransferPrice : @storage
                        EQ;         # bool : @parameter%changeMinTransferPrice : @storage
                      }; # bool : @parameter%changeMinTransferPrice : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeMinTransferPrice : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeMinTransferPrice : @storage
                        GET 7;      # address : @parameter%changeMinTransferPrice : @storage
                        SENDER;     # @sender : address : @parameter%changeMinTransferPrice : @storage
                        COMPARE;    # int : @parameter%changeMinTransferPrice : @storage
                        EQ;         # bool : @parameter%changeMinTransferPrice : @storage
                      }; # bool : @parameter%changeMinTransferPrice : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeMinTransferPrice : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeMinTransferPrice : @storage
                    # self.data.minTransferPrice = newMinTransferPrice # @parameter%changeMinTransferPrice : @storage
                    UPDATE 9;   # @storage
                  }
                  {
                    # == changeMintPrice ==
                    # assert sp.sender == self.data.admin1 or sp.sender == self.data.admin2 or sp.sender == self.data.admin3 or sp.sender == self.data.admin4, "Must be admin" # @parameter%changeMintPrice : @storage
                    DUP 2;      # @storage : @parameter%changeMintPrice : @storage
                    CAR;        # address : @parameter%changeMintPrice : @storage
                    SENDER;     # @sender : address : @parameter%changeMintPrice : @storage
                    COMPARE;    # int : @parameter%changeMintPrice : @storage
                    EQ;         # bool : @parameter%changeMintPrice : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeMintPrice : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeMintPrice : @storage
                        GET 3;      # address : @parameter%changeMintPrice : @storage
                        SENDER;     # @sender : address : @parameter%changeMintPrice : @storage
                        COMPARE;    # int : @parameter%changeMintPrice : @storage
                        EQ;         # bool : @parameter%changeMintPrice : @storage
                      }; # bool : @parameter%changeMintPrice : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeMintPrice : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeMintPrice : @storage
                        GET 5;      # address : @parameter%changeMintPrice : @storage
                        SENDER;     # @sender : address : @parameter%changeMintPrice : @storage
                        COMPARE;    # int : @parameter%changeMintPrice : @storage
                        EQ;         # bool : @parameter%changeMintPrice : @storage
                      }; # bool : @parameter%changeMintPrice : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeMintPrice : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeMintPrice : @storage
                        GET 7;      # address : @parameter%changeMintPrice : @storage
                        SENDER;     # @sender : address : @parameter%changeMintPrice : @storage
                        COMPARE;    # int : @parameter%changeMintPrice : @storage
                        EQ;         # bool : @parameter%changeMintPrice : @storage
                      }; # bool : @parameter%changeMintPrice : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeMintPrice : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeMintPrice : @storage
                    # self.data.mintPrice = newMintPrice # @parameter%changeMintPrice : @storage
                    UPDATE 11;  # @storage
                  }; # @storage
              }
              {
                IF_LEFT
                  {
                    # == changeRequestFee ==
                    # assert sp.sender == self.data.admin1 or sp.sender == self.data.admin2 or sp.sender == self.data.admin3 or sp.sender == self.data.admin4, "Must be admin" # @parameter%changeRequestFee : @storage
                    DUP 2;      # @storage : @parameter%changeRequestFee : @storage
                    CAR;        # address : @parameter%changeRequestFee : @storage
                    SENDER;     # @sender : address : @parameter%changeRequestFee : @storage
                    COMPARE;    # int : @parameter%changeRequestFee : @storage
                    EQ;         # bool : @parameter%changeRequestFee : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeRequestFee : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeRequestFee : @storage
                        GET 3;      # address : @parameter%changeRequestFee : @storage
                        SENDER;     # @sender : address : @parameter%changeRequestFee : @storage
                        COMPARE;    # int : @parameter%changeRequestFee : @storage
                        EQ;         # bool : @parameter%changeRequestFee : @storage
                      }; # bool : @parameter%changeRequestFee : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeRequestFee : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeRequestFee : @storage
                        GET 5;      # address : @parameter%changeRequestFee : @storage
                        SENDER;     # @sender : address : @parameter%changeRequestFee : @storage
                        COMPARE;    # int : @parameter%changeRequestFee : @storage
                        EQ;         # bool : @parameter%changeRequestFee : @storage
                      }; # bool : @parameter%changeRequestFee : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeRequestFee : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeRequestFee : @storage
                        GET 7;      # address : @parameter%changeRequestFee : @storage
                        SENDER;     # @sender : address : @parameter%changeRequestFee : @storage
                        COMPARE;    # int : @parameter%changeRequestFee : @storage
                        EQ;         # bool : @parameter%changeRequestFee : @storage
                      }; # bool : @parameter%changeRequestFee : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeRequestFee : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeRequestFee : @storage
                    # self.data.requestFee = newRequestFee # @parameter%changeRequestFee : @storage
                    UPDATE 13;  # @storage
                  }
                  {
                    # == changeSplit ==
                    # assert sp.sender == self.data.admin1 or sp.sender == self.data.admin2 or sp.sender == self.data.admin3 or sp.sender == self.data.admin4, "Must be admin" # @parameter%changeSplit : @storage
                    DUP 2;      # @storage : @parameter%changeSplit : @storage
                    CAR;        # address : @parameter%changeSplit : @storage
                    SENDER;     # @sender : address : @parameter%changeSplit : @storage
                    COMPARE;    # int : @parameter%changeSplit : @storage
                    EQ;         # bool : @parameter%changeSplit : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeSplit : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeSplit : @storage
                        GET 3;      # address : @parameter%changeSplit : @storage
                        SENDER;     # @sender : address : @parameter%changeSplit : @storage
                        COMPARE;    # int : @parameter%changeSplit : @storage
                        EQ;         # bool : @parameter%changeSplit : @storage
                      }; # bool : @parameter%changeSplit : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeSplit : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeSplit : @storage
                        GET 5;      # address : @parameter%changeSplit : @storage
                        SENDER;     # @sender : address : @parameter%changeSplit : @storage
                        COMPARE;    # int : @parameter%changeSplit : @storage
                        EQ;         # bool : @parameter%changeSplit : @storage
                      }; # bool : @parameter%changeSplit : @storage
                    IF
                      {
                        PUSH bool True; # bool : @parameter%changeSplit : @storage
                      }
                      {
                        DUP 2;      # @storage : @parameter%changeSplit : @storage
                        GET 7;      # address : @parameter%changeSplit : @storage
                        SENDER;     # @sender : address : @parameter%changeSplit : @storage
                        COMPARE;    # int : @parameter%changeSplit : @storage
                        EQ;         # bool : @parameter%changeSplit : @storage
                      }; # bool : @parameter%changeSplit : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be admin"; # string : @parameter%changeSplit : @storage
                        FAILWITH;   # FAILED
                      }; # @parameter%changeSplit : @storage
                    # self.data.split = newSplit # @parameter%changeSplit : @storage
                    UPDATE 15;  # @storage
                  }; # @storage
              }; # @storage
          }; # @storage
        NIL operation; # list operation : @storage
      }
      {
        IF_LEFT
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    # == changeTransferPrice ==
                    # svl = self.data.svls[params.svl_key] # @parameter%changeTransferPrice : @storage
                    DUP 2;      # @storage : @parameter%changeTransferPrice : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%changeTransferPrice : @storage
                    DUP 2;      # @parameter%changeTransferPrice : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%changeTransferPrice : @storage
                    CDR;        # string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%changeTransferPrice : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%changeTransferPrice : @storage
                    IF_NONE
                      {
                        PUSH int 113; # int : @parameter%changeTransferPrice : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%changeTransferPrice : @storage
                    # assert sp.sender == svl.owner, "Must be SVL owner" # @some : @parameter%changeTransferPrice : @storage
                    DUP;        # @some : @some : @parameter%changeTransferPrice : @storage
                    GET 13;     # address : @some : @parameter%changeTransferPrice : @storage
                    SENDER;     # @sender : address : @some : @parameter%changeTransferPrice : @storage
                    COMPARE;    # int : @some : @parameter%changeTransferPrice : @storage
                    EQ;         # bool : @some : @parameter%changeTransferPrice : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be SVL owner"; # string : @some : @parameter%changeTransferPrice : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%changeTransferPrice : @storage
                    # assert params.price >= self.data.minTransferPrice, "Must be >= than min price" # @some : @parameter%changeTransferPrice : @storage
                    DUP 3;      # @storage : @some : @parameter%changeTransferPrice : @storage
                    GET 9;      # mutez : @some : @parameter%changeTransferPrice : @storage
                    DUP 3;      # @parameter%changeTransferPrice : mutez : @some : @parameter%changeTransferPrice : @storage
                    CAR;        # mutez : mutez : @some : @parameter%changeTransferPrice : @storage
                    COMPARE;    # int : @some : @parameter%changeTransferPrice : @storage
                    GE;         # bool : @some : @parameter%changeTransferPrice : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be >= than min price"; # string : @some : @parameter%changeTransferPrice : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%changeTransferPrice : @storage
                    # svl.price = params.price # @some : @parameter%changeTransferPrice : @storage
                    DUP 2;      # @parameter%changeTransferPrice : @some : @parameter%changeTransferPrice : @storage
                    CAR;        # mutez : @some : @parameter%changeTransferPrice : @storage
                    UPDATE 17;  # @some : @parameter%changeTransferPrice : @storage
                    # self.data.svls[params.svl_key] = svl # @some : @parameter%changeTransferPrice : @storage
                    DIG 2;      # @storage : @some : @parameter%changeTransferPrice
                    DUP;        # @storage : @storage : @some : @parameter%changeTransferPrice
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @some : @parameter%changeTransferPrice
                    DIG 2;      # @some : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%changeTransferPrice
                    SOME;       # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%changeTransferPrice
                    DIG 3;      # @parameter%changeTransferPrice : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    CDR;        # string : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE 16;  # @storage
                    NIL operation; # list operation : @storage
                  }
                  {
                    # == mint ==
                    # value_option = self.data.svls.get_opt(params.svl_key) # @parameter%mint : @storage
                    DUP 2;      # @storage : @parameter%mint : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    DUP 2;      # @parameter%mint : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    GET 9;      # string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    # assert value_option.is_none(), "Must be a new entry" # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    DUP;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    IF_NONE
                      {}
                      {
                        PUSH string "Must be a new entry"; # string : @some : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        FAILWITH;   # FAILED
                      }; # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    # assert sp.amount == self.data.mintPrice, "Not enough tez" # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    DUP 3;      # @storage : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    GET 11;     # mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    AMOUNT;     # @amount : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    COMPARE;    # int : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    EQ;         # bool : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    IF
                      {}
                      {
                        PUSH string "Not enough tez"; # string : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        FAILWITH;   # FAILED
                      }; # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    # assert len(params.curr_owner_info) < 100, "Owner limit reached" # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    PUSH nat 100; # nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    DUP 3;      # @parameter%mint : nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    GET 5;      # list string : nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    SIZE;       # nat : nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    COMPARE;    # int : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    LT;         # bool : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    IF
                      {}
                      {
                        PUSH string "Owner limit reached"; # string : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        FAILWITH;   # FAILED
                      }; # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    # if self.data.mintPrice != sp.mutez(0): # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    PUSH mutez 0; # mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    DUP 4;      # @storage : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    GET 11;     # mutez : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    COMPARE;    # int : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    NEQ;        # bool : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    IF
                      {
                        # share = sp.split_tokens(sp.amount, 25, 100) # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        PUSH nat 100; # nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        PUSH nat 25; # nat : nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        AMOUNT;     # @amount : nat : nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        MUL;        # mutez : nat : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        EDIV;       # option (pair mutez mutez) : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        IF_NONE
                          {
                            PUSH int 184; # int : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                            FAILWITH;   # FAILED
                          }
                          {
                            # share = sp.split_tokens(sp.amount, 25, 100) # @some : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                          }; # @some : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CAR;        # mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        # sp.send(self.data.admin1, share) # mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        NIL operation; # list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DUP 5;      # @storage : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CAR;        # address : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        IF_NONE
                          {
                            PUSH int 185; # int : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONS;       # list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        # sp.send(self.data.admin2, share) # list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DUP 5;      # @storage : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        GET 3;      # address : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        IF_NONE
                          {
                            PUSH int 186; # int : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONS;       # list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        # sp.send(self.data.admin3, share) # list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DUP 5;      # @storage : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        GET 5;      # address : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        IF_NONE
                          {
                            PUSH int 187; # int : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONS;       # list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        # sp.send(self.data.admin4, share) # list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DUP 5;      # @storage : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        GET 7;      # address : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        IF_NONE
                          {
                            PUSH int 188; # int : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        DIG 2;      # mutez : @some : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        UNIT;       # unit : mutez : @some : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        TRANSFER_TOKENS; # operation : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                        CONS;       # list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                      }
                      {
                        NIL operation; # list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                      }; # list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    # self.data.svls[params.svl_key] = sp.record( # list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint : @storage
                    DIG 3;      # @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DUP;        # @storage : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DUP 5;      # @parameter%mint : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    GET 12;     # string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    SENDER;     # @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DUP 7;      # @parameter%mint : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    GET 11;     # mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    NIL (pair address (list string)); # list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    PUSH (list string) {""}; # list string : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    SENDER;     # @sender : list string : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    PAIR;       # pair @sender (list string) : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    CONS;       # list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    SENDER;     # @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DUP 10;     # @parameter%mint : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    GET 7;      # string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    PUSH bool True; # bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DUP 12;     # @parameter%mint : bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    GET 5;      # list string : bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DUP 13;     # @parameter%mint : list string : bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    GET 3;      # string : list string : bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    PUSH bool False; # bool : string : list string : bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DUP 15;     # @parameter%mint : bool : string : list string : bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    CAR;        # string : bool : string : list string : bool : string : @sender : list (pair address (list string)) : mutez : @sender : string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    PAIR 11;    # pair string (pair bool (pair string (pair (list string) (pair bool (pair string (pair @sender (pair (list (pair address (list string))) (pair mutez (pair @sender string))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%mint
                    DIG 4;      # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : pair string (pair bool (pair string (pair (list string) (pair bool (pair string (pair @sender (pair (list (pair address (list string))) (pair mutez (pair @sender string))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @parameter%mint
                    DROP;       # pair string (pair bool (pair string (pair (list string) (pair bool (pair string (pair @sender (pair (list (pair address (list string))) (pair mutez (pair @sender string))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @parameter%mint
                    SOME;       # option (pair string (pair bool (pair string (pair (list string) (pair bool (pair string (pair @sender (pair (list (pair address (list string))) (pair mutez (pair @sender string)))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @parameter%mint
                    DIG 4;      # @parameter%mint : option (pair string (pair bool (pair string (pair (list string) (pair bool (pair string (pair @sender (pair (list (pair address (list string))) (pair mutez (pair @sender string)))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation
                    GET 9;      # string : option (pair string (pair bool (pair string (pair (list string) (pair bool (pair string (pair @sender (pair (list (pair address (list string))) (pair mutez (pair @sender string)))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation
                    UPDATE;     # big_map string (pair string (pair bool (pair string (pair (list string) (pair bool (pair string (pair address (pair (list (pair address (list string))) (pair mutez (pair address string)))))))))) : @storage : list operation
                    UPDATE 16;  # @storage : list operation
                    SWAP;       # list operation : @storage
                  }; # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    # == ownerAcceptTransferRequest ==
                    # svl = self.data.svls[svl_key] # @parameter%ownerAcceptTransferRequest : @storage
                    DUP 2;      # @storage : @parameter%ownerAcceptTransferRequest : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%ownerAcceptTransferRequest : @storage
                    DUP 2;      # @parameter%ownerAcceptTransferRequest : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%ownerAcceptTransferRequest : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%ownerAcceptTransferRequest : @storage
                    IF_NONE
                      {
                        PUSH int 94; # int : @parameter%ownerAcceptTransferRequest : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%ownerAcceptTransferRequest : @storage
                    # assert svl.owner == sp.sender, "Must be SVL owner" # @some : @parameter%ownerAcceptTransferRequest : @storage
                    SENDER;     # @sender : @some : @parameter%ownerAcceptTransferRequest : @storage
                    DUP 2;      # @some : @sender : @some : @parameter%ownerAcceptTransferRequest : @storage
                    GET 13;     # address : @sender : @some : @parameter%ownerAcceptTransferRequest : @storage
                    COMPARE;    # int : @some : @parameter%ownerAcceptTransferRequest : @storage
                    EQ;         # bool : @some : @parameter%ownerAcceptTransferRequest : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be SVL owner"; # string : @some : @parameter%ownerAcceptTransferRequest : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%ownerAcceptTransferRequest : @storage
                    # assert svl.request != svl.owner, "No request to accept" # @some : @parameter%ownerAcceptTransferRequest : @storage
                    DUP;        # @some : @some : @parameter%ownerAcceptTransferRequest : @storage
                    GET 13;     # address : @some : @parameter%ownerAcceptTransferRequest : @storage
                    DUP 2;      # @some : address : @some : @parameter%ownerAcceptTransferRequest : @storage
                    GET 19;     # address : address : @some : @parameter%ownerAcceptTransferRequest : @storage
                    COMPARE;    # int : @some : @parameter%ownerAcceptTransferRequest : @storage
                    NEQ;        # bool : @some : @parameter%ownerAcceptTransferRequest : @storage
                    IF
                      {}
                      {
                        PUSH string "No request to accept"; # string : @some : @parameter%ownerAcceptTransferRequest : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%ownerAcceptTransferRequest : @storage
                    # svl.acceptRequest = True # @some : @parameter%ownerAcceptTransferRequest : @storage
                    PUSH bool True; # bool : @some : @parameter%ownerAcceptTransferRequest : @storage
                    UPDATE 3;   # @some : @parameter%ownerAcceptTransferRequest : @storage
                    # self.data.svls[svl_key] = svl # @some : @parameter%ownerAcceptTransferRequest : @storage
                    DIG 2;      # @storage : @some : @parameter%ownerAcceptTransferRequest
                    DUP;        # @storage : @storage : @some : @parameter%ownerAcceptTransferRequest
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @some : @parameter%ownerAcceptTransferRequest
                    DIG 2;      # @some : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%ownerAcceptTransferRequest
                    SOME;       # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%ownerAcceptTransferRequest
                    DIG 3;      # @parameter%ownerAcceptTransferRequest : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE 16;  # @storage
                  }
                  {
                    # == ownerClearTransferRequest ==
                    # svl = self.data.svls[svl_key] # @parameter%ownerClearTransferRequest : @storage
                    DUP 2;      # @storage : @parameter%ownerClearTransferRequest : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%ownerClearTransferRequest : @storage
                    DUP 2;      # @parameter%ownerClearTransferRequest : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%ownerClearTransferRequest : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%ownerClearTransferRequest : @storage
                    IF_NONE
                      {
                        PUSH int 85; # int : @parameter%ownerClearTransferRequest : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%ownerClearTransferRequest : @storage
                    # assert svl.owner == sp.sender, "Must be SVL owner to clear request" # @some : @parameter%ownerClearTransferRequest : @storage
                    SENDER;     # @sender : @some : @parameter%ownerClearTransferRequest : @storage
                    DUP 2;      # @some : @sender : @some : @parameter%ownerClearTransferRequest : @storage
                    GET 13;     # address : @sender : @some : @parameter%ownerClearTransferRequest : @storage
                    COMPARE;    # int : @some : @parameter%ownerClearTransferRequest : @storage
                    EQ;         # bool : @some : @parameter%ownerClearTransferRequest : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be SVL owner to clear request"; # string : @some : @parameter%ownerClearTransferRequest : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%ownerClearTransferRequest : @storage
                    # svl.request = svl.owner # @some : @parameter%ownerClearTransferRequest : @storage
                    DUP;        # @some : @some : @parameter%ownerClearTransferRequest : @storage
                    GET 13;     # address : @some : @parameter%ownerClearTransferRequest : @storage
                    UPDATE 19;  # @some : @parameter%ownerClearTransferRequest : @storage
                    # svl.acceptRequest = False # @some : @parameter%ownerClearTransferRequest : @storage
                    PUSH bool False; # bool : @some : @parameter%ownerClearTransferRequest : @storage
                    UPDATE 3;   # @some : @parameter%ownerClearTransferRequest : @storage
                    # self.data.svls[svl_key] = svl # @some : @parameter%ownerClearTransferRequest : @storage
                    DIG 2;      # @storage : @some : @parameter%ownerClearTransferRequest
                    DUP;        # @storage : @storage : @some : @parameter%ownerClearTransferRequest
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @some : @parameter%ownerClearTransferRequest
                    DIG 2;      # @some : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%ownerClearTransferRequest
                    SOME;       # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%ownerClearTransferRequest
                    DIG 3;      # @parameter%ownerClearTransferRequest : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE 16;  # @storage
                  }; # @storage
                NIL operation; # list operation : @storage
              }; # list operation : @storage
          }
          {
            IF_LEFT
              {
                IF_LEFT
                  {
                    # == requestTransfer ==
                    # svl = self.data.svls[svl_key] # @parameter%requestTransfer : @storage
                    DUP 2;      # @storage : @parameter%requestTransfer : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%requestTransfer : @storage
                    DUP 2;      # @parameter%requestTransfer : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%requestTransfer : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%requestTransfer : @storage
                    IF_NONE
                      {
                        PUSH int 69; # int : @parameter%requestTransfer : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%requestTransfer : @storage
                    # assert sp.amount == self.data.requestFee, "Not enough tez" # @some : @parameter%requestTransfer : @storage
                    DUP 3;      # @storage : @some : @parameter%requestTransfer : @storage
                    GET 13;     # mutez : @some : @parameter%requestTransfer : @storage
                    AMOUNT;     # @amount : mutez : @some : @parameter%requestTransfer : @storage
                    COMPARE;    # int : @some : @parameter%requestTransfer : @storage
                    EQ;         # bool : @some : @parameter%requestTransfer : @storage
                    IF
                      {}
                      {
                        PUSH string "Not enough tez"; # string : @some : @parameter%requestTransfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%requestTransfer : @storage
                    # assert sp.sender != svl.owner, "Owner cannot request transfer of their svl" # @some : @parameter%requestTransfer : @storage
                    DUP;        # @some : @some : @parameter%requestTransfer : @storage
                    GET 13;     # address : @some : @parameter%requestTransfer : @storage
                    SENDER;     # @sender : address : @some : @parameter%requestTransfer : @storage
                    COMPARE;    # int : @some : @parameter%requestTransfer : @storage
                    NEQ;        # bool : @some : @parameter%requestTransfer : @storage
                    IF
                      {}
                      {
                        PUSH string "Owner cannot request transfer of their svl"; # string : @some : @parameter%requestTransfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%requestTransfer : @storage
                    # assert svl.request == svl.owner, "Already requested by someone" # @some : @parameter%requestTransfer : @storage
                    DUP;        # @some : @some : @parameter%requestTransfer : @storage
                    GET 13;     # address : @some : @parameter%requestTransfer : @storage
                    DUP 2;      # @some : address : @some : @parameter%requestTransfer : @storage
                    GET 19;     # address : address : @some : @parameter%requestTransfer : @storage
                    COMPARE;    # int : @some : @parameter%requestTransfer : @storage
                    EQ;         # bool : @some : @parameter%requestTransfer : @storage
                    IF
                      {}
                      {
                        PUSH string "Already requested by someone"; # string : @some : @parameter%requestTransfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%requestTransfer : @storage
                    # if self.data.requestFee != sp.mutez(0): # @some : @parameter%requestTransfer : @storage
                    PUSH mutez 0; # mutez : @some : @parameter%requestTransfer : @storage
                    DUP 4;      # @storage : mutez : @some : @parameter%requestTransfer : @storage
                    GET 13;     # mutez : mutez : @some : @parameter%requestTransfer : @storage
                    COMPARE;    # int : @some : @parameter%requestTransfer : @storage
                    NEQ;        # bool : @some : @parameter%requestTransfer : @storage
                    IF
                      {
                        # share = sp.split_tokens(sp.amount, 25, 100) # @some : @parameter%requestTransfer : @storage
                        PUSH nat 100; # nat : @some : @parameter%requestTransfer : @storage
                        PUSH nat 25; # nat : nat : @some : @parameter%requestTransfer : @storage
                        AMOUNT;     # @amount : nat : nat : @some : @parameter%requestTransfer : @storage
                        MUL;        # mutez : nat : @some : @parameter%requestTransfer : @storage
                        EDIV;       # option (pair mutez mutez) : @some : @parameter%requestTransfer : @storage
                        IF_NONE
                          {
                            PUSH int 74; # int : @some : @parameter%requestTransfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {
                            # share = sp.split_tokens(sp.amount, 25, 100) # @some : @some : @parameter%requestTransfer : @storage
                          }; # @some : @some : @parameter%requestTransfer : @storage
                        CAR;        # mutez : @some : @parameter%requestTransfer : @storage
                        # sp.send(self.data.admin1, share) # mutez : @some : @parameter%requestTransfer : @storage
                        NIL operation; # list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CAR;        # address : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        IF_NONE
                          {
                            PUSH int 75; # int : list operation : mutez : @some : @parameter%requestTransfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CONS;       # list operation : mutez : @some : @parameter%requestTransfer : @storage
                        # sp.send(self.data.admin2, share) # list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        GET 3;      # address : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        IF_NONE
                          {
                            PUSH int 76; # int : list operation : mutez : @some : @parameter%requestTransfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CONS;       # list operation : mutez : @some : @parameter%requestTransfer : @storage
                        # sp.send(self.data.admin3, share) # list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        GET 5;      # address : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        IF_NONE
                          {
                            PUSH int 77; # int : list operation : mutez : @some : @parameter%requestTransfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CONS;       # list operation : mutez : @some : @parameter%requestTransfer : @storage
                        # sp.send(self.data.admin4, share) # list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        GET 7;      # address : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        IF_NONE
                          {
                            PUSH int 78; # int : list operation : mutez : @some : @parameter%requestTransfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%requestTransfer : @storage
                        DIG 2;      # mutez : @some : list operation : @some : @parameter%requestTransfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : @some : @parameter%requestTransfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : @some : @parameter%requestTransfer : @storage
                        CONS;       # list operation : @some : @parameter%requestTransfer : @storage
                      }
                      {
                        NIL operation; # list operation : @some : @parameter%requestTransfer : @storage
                      }; # list operation : @some : @parameter%requestTransfer : @storage
                    SWAP;       # @some : list operation : @parameter%requestTransfer : @storage
                    # svl.request = sp.sender # @some : list operation : @parameter%requestTransfer : @storage
                    SENDER;     # @sender : @some : list operation : @parameter%requestTransfer : @storage
                    UPDATE 19;  # @some : list operation : @parameter%requestTransfer : @storage
                    SWAP;       # list operation : @some : @parameter%requestTransfer : @storage
                    # self.data.svls[svl_key] = svl # list operation : @some : @parameter%requestTransfer : @storage
                    DIG 3;      # @storage : list operation : @some : @parameter%requestTransfer
                    DUP;        # @storage : @storage : list operation : @some : @parameter%requestTransfer
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @some : @parameter%requestTransfer
                    DIG 3;      # @some : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @parameter%requestTransfer
                    SOME;       # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @parameter%requestTransfer
                    DIG 4;      # @parameter%requestTransfer : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation
                    UPDATE;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation
                    UPDATE 16;  # @storage : list operation
                    SWAP;       # list operation : @storage
                  }
                  {
                    # == requesterClearTransferRequest ==
                    # svl = self.data.svls[svl_key] # @parameter%requesterClearTransferRequest : @storage
                    DUP 2;      # @storage : @parameter%requesterClearTransferRequest : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%requesterClearTransferRequest : @storage
                    DUP 2;      # @parameter%requesterClearTransferRequest : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%requesterClearTransferRequest : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%requesterClearTransferRequest : @storage
                    IF_NONE
                      {
                        PUSH int 103; # int : @parameter%requesterClearTransferRequest : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%requesterClearTransferRequest : @storage
                    # assert svl.request == sp.sender, "Must be requester" # @some : @parameter%requesterClearTransferRequest : @storage
                    SENDER;     # @sender : @some : @parameter%requesterClearTransferRequest : @storage
                    DUP 2;      # @some : @sender : @some : @parameter%requesterClearTransferRequest : @storage
                    GET 19;     # address : @sender : @some : @parameter%requesterClearTransferRequest : @storage
                    COMPARE;    # int : @some : @parameter%requesterClearTransferRequest : @storage
                    EQ;         # bool : @some : @parameter%requesterClearTransferRequest : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be requester"; # string : @some : @parameter%requesterClearTransferRequest : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%requesterClearTransferRequest : @storage
                    # svl.request = svl.owner # @some : @parameter%requesterClearTransferRequest : @storage
                    DUP;        # @some : @some : @parameter%requesterClearTransferRequest : @storage
                    GET 13;     # address : @some : @parameter%requesterClearTransferRequest : @storage
                    UPDATE 19;  # @some : @parameter%requesterClearTransferRequest : @storage
                    # svl.acceptRequest = False # @some : @parameter%requesterClearTransferRequest : @storage
                    PUSH bool False; # bool : @some : @parameter%requesterClearTransferRequest : @storage
                    UPDATE 3;   # @some : @parameter%requesterClearTransferRequest : @storage
                    # self.data.svls[svl_key] = svl # @some : @parameter%requesterClearTransferRequest : @storage
                    DIG 2;      # @storage : @some : @parameter%requesterClearTransferRequest
                    DUP;        # @storage : @storage : @some : @parameter%requesterClearTransferRequest
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @some : @parameter%requesterClearTransferRequest
                    DIG 2;      # @some : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%requesterClearTransferRequest
                    SOME;       # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%requesterClearTransferRequest
                    DIG 3;      # @parameter%requesterClearTransferRequest : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE 16;  # @storage
                    NIL operation; # list operation : @storage
                  }; # list operation : @storage
              }
              {
                IF_LEFT
                  {
                    # == transfer ==
                    # svl = self.data.svls[svl_key] # @parameter%transfer : @storage
                    DUP 2;      # @storage : @parameter%transfer : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%transfer : @storage
                    DUP 2;      # @parameter%transfer : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%transfer : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%transfer : @storage
                    IF_NONE
                      {
                        PUSH int 122; # int : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%transfer : @storage
                    # assert sp.amount == svl.price, "Not enough tez" # @some : @parameter%transfer : @storage
                    DUP;        # @some : @some : @parameter%transfer : @storage
                    GET 17;     # mutez : @some : @parameter%transfer : @storage
                    AMOUNT;     # @amount : mutez : @some : @parameter%transfer : @storage
                    COMPARE;    # int : @some : @parameter%transfer : @storage
                    EQ;         # bool : @some : @parameter%transfer : @storage
                    IF
                      {}
                      {
                        PUSH string "Not enough tez"; # string : @some : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%transfer : @storage
                    # assert svl.owner != sp.sender, "Cannot transfer to myself" # @some : @parameter%transfer : @storage
                    SENDER;     # @sender : @some : @parameter%transfer : @storage
                    DUP 2;      # @some : @sender : @some : @parameter%transfer : @storage
                    GET 13;     # address : @sender : @some : @parameter%transfer : @storage
                    COMPARE;    # int : @some : @parameter%transfer : @storage
                    NEQ;        # bool : @some : @parameter%transfer : @storage
                    IF
                      {}
                      {
                        PUSH string "Cannot transfer to myself"; # string : @some : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%transfer : @storage
                    # assert svl.request == sp.sender, "Must be requester" # @some : @parameter%transfer : @storage
                    SENDER;     # @sender : @some : @parameter%transfer : @storage
                    DUP 2;      # @some : @sender : @some : @parameter%transfer : @storage
                    GET 19;     # address : @sender : @some : @parameter%transfer : @storage
                    COMPARE;    # int : @some : @parameter%transfer : @storage
                    EQ;         # bool : @some : @parameter%transfer : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be requester"; # string : @some : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%transfer : @storage
                    # assert svl.acceptRequest == True, "Request not accepted" # @some : @parameter%transfer : @storage
                    PUSH bool True; # bool : @some : @parameter%transfer : @storage
                    DUP 2;      # @some : bool : @some : @parameter%transfer : @storage
                    GET 3;      # bool : bool : @some : @parameter%transfer : @storage
                    COMPARE;    # int : @some : @parameter%transfer : @storage
                    EQ;         # bool : @some : @parameter%transfer : @storage
                    IF
                      {}
                      {
                        PUSH string "Request not accepted"; # string : @some : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%transfer : @storage
                    # seller_share = sp.split_tokens(sp.amount, self.data.split, 100) # @some : @parameter%transfer : @storage
                    PUSH nat 100; # nat : @some : @parameter%transfer : @storage
                    DUP 4;      # @storage : nat : @some : @parameter%transfer : @storage
                    GET 15;     # nat : nat : @some : @parameter%transfer : @storage
                    AMOUNT;     # @amount : nat : nat : @some : @parameter%transfer : @storage
                    MUL;        # mutez : nat : @some : @parameter%transfer : @storage
                    EDIV;       # option (pair mutez mutez) : @some : @parameter%transfer : @storage
                    IF_NONE
                      {
                        PUSH int 127; # int : @some : @parameter%transfer : @storage
                        FAILWITH;   # FAILED
                      }
                      {
                        # seller_share = sp.split_tokens(sp.amount, self.data.split, 100) # @some : @some : @parameter%transfer : @storage
                      }; # @some : @some : @parameter%transfer : @storage
                    CAR;        # mutez : @some : @parameter%transfer : @storage
                    # if self.data.split != sp.nat(0): sp.send(sp.sender, seller_share) # mutez : @some : @parameter%transfer : @storage
                    PUSH nat 0; # nat : mutez : @some : @parameter%transfer : @storage
                    DUP 5;      # @storage : nat : mutez : @some : @parameter%transfer : @storage
                    GET 15;     # nat : nat : mutez : @some : @parameter%transfer : @storage
                    COMPARE;    # int : mutez : @some : @parameter%transfer : @storage
                    NEQ;        # bool : mutez : @some : @parameter%transfer : @storage
                    IF
                      {
                        # if self.data.split != sp.nat(0): sp.send(sp.sender, seller_share) # mutez : @some : @parameter%transfer : @storage
                        NIL operation; # list operation : mutez : @some : @parameter%transfer : @storage
                        SENDER;     # @sender : list operation : mutez : @some : @parameter%transfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%transfer : @storage
                        IF_NONE
                          {
                            PUSH int 128; # int : list operation : mutez : @some : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : @some : @parameter%transfer : @storage
                        CONS;       # list operation : mutez : @some : @parameter%transfer : @storage
                      }
                      {
                        NIL operation; # list operation : mutez : @some : @parameter%transfer : @storage
                      }; # list operation : mutez : @some : @parameter%transfer : @storage
                    # if self.data.split != sp.nat(100): # list operation : mutez : @some : @parameter%transfer : @storage
                    PUSH nat 100; # nat : list operation : mutez : @some : @parameter%transfer : @storage
                    DUP 6;      # @storage : nat : list operation : mutez : @some : @parameter%transfer : @storage
                    GET 15;     # nat : nat : list operation : mutez : @some : @parameter%transfer : @storage
                    COMPARE;    # int : list operation : mutez : @some : @parameter%transfer : @storage
                    NEQ;        # bool : list operation : mutez : @some : @parameter%transfer : @storage
                    IF
                      {
                        SWAP;       # mutez : list operation : @some : @parameter%transfer : @storage
                        # my_fee = sp.amount - seller_share # mutez : list operation : @some : @parameter%transfer : @storage
                        AMOUNT;     # @amount : mutez : list operation : @some : @parameter%transfer : @storage
                        SUB_MUTEZ;  # option mutez : list operation : @some : @parameter%transfer : @storage
                        IF_NONE
                          {
                            PUSH int 130; # int : list operation : @some : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : @some : @parameter%transfer : @storage
                        # my_fee_share = sp.split_tokens(my_fee, 25, 100) # @some : list operation : @some : @parameter%transfer : @storage
                        PUSH nat 100; # nat : @some : list operation : @some : @parameter%transfer : @storage
                        PUSH nat 25; # nat : nat : @some : list operation : @some : @parameter%transfer : @storage
                        DIG 2;      # @some : nat : nat : list operation : @some : @parameter%transfer : @storage
                        MUL;        # mutez : nat : list operation : @some : @parameter%transfer : @storage
                        EDIV;       # option (pair mutez mutez) : list operation : @some : @parameter%transfer : @storage
                        IF_NONE
                          {
                            PUSH int 131; # int : list operation : @some : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {
                            # my_fee_share = sp.split_tokens(my_fee, 25, 100) # @some : list operation : @some : @parameter%transfer : @storage
                          }; # @some : list operation : @some : @parameter%transfer : @storage
                        CAR;        # mutez : list operation : @some : @parameter%transfer : @storage
                        SWAP;       # list operation : mutez : @some : @parameter%transfer : @storage
                        # sp.send(self.data.admin1, my_fee_share) # list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%transfer : @storage
                        CAR;        # address : list operation : mutez : @some : @parameter%transfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%transfer : @storage
                        IF_NONE
                          {
                            PUSH int 132; # int : list operation : mutez : @some : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : @some : @parameter%transfer : @storage
                        CONS;       # list operation : mutez : @some : @parameter%transfer : @storage
                        # sp.send(self.data.admin2, my_fee_share) # list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%transfer : @storage
                        GET 3;      # address : list operation : mutez : @some : @parameter%transfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%transfer : @storage
                        IF_NONE
                          {
                            PUSH int 133; # int : list operation : mutez : @some : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : @some : @parameter%transfer : @storage
                        CONS;       # list operation : mutez : @some : @parameter%transfer : @storage
                        # sp.send(self.data.admin3, my_fee_share) # list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%transfer : @storage
                        GET 5;      # address : list operation : mutez : @some : @parameter%transfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%transfer : @storage
                        IF_NONE
                          {
                            PUSH int 134; # int : list operation : mutez : @some : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 3;      # mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : mutez : @some : @parameter%transfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : mutez : @some : @parameter%transfer : @storage
                        CONS;       # list operation : mutez : @some : @parameter%transfer : @storage
                        # sp.send(self.data.admin4, my_fee_share) # list operation : mutez : @some : @parameter%transfer : @storage
                        DUP 5;      # @storage : list operation : mutez : @some : @parameter%transfer : @storage
                        GET 7;      # address : list operation : mutez : @some : @parameter%transfer : @storage
                        CONTRACT unit; # option (contract unit) : list operation : mutez : @some : @parameter%transfer : @storage
                        IF_NONE
                          {
                            PUSH int 135; # int : list operation : mutez : @some : @parameter%transfer : @storage
                            FAILWITH;   # FAILED
                          }
                          {}; # @some : list operation : mutez : @some : @parameter%transfer : @storage
                        DIG 2;      # mutez : @some : list operation : @some : @parameter%transfer : @storage
                        UNIT;       # unit : mutez : @some : list operation : @some : @parameter%transfer : @storage
                        TRANSFER_TOKENS; # operation : list operation : @some : @parameter%transfer : @storage
                        CONS;       # list operation : @some : @parameter%transfer : @storage
                      }
                      {
                        SWAP;       # mutez : list operation : @some : @parameter%transfer : @storage
                        DROP;       # list operation : @some : @parameter%transfer : @storage
                      }; # list operation : @some : @parameter%transfer : @storage
                    # if svl.first_owner: # list operation : @some : @parameter%transfer : @storage
                    DUP 2;      # @some : list operation : @some : @parameter%transfer : @storage
                    GET 9;      # bool : list operation : @some : @parameter%transfer : @storage
                    IF
                      {
                        # svl.prev_owners_info = [(svl.owner, svl.curr_owner_info)] # list operation : @some : @parameter%transfer : @storage
                        NIL (pair address (list string)); # list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        DUP 3;      # @some : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        GET 7;      # list string : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        DUP 4;      # @some : list string : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        GET 13;     # address : list string : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        PAIR;       # pair address (list string) : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        CONS;       # list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        DIG 2;      # @some : list (pair address (list string)) : list operation : @parameter%transfer : @storage
                        SWAP;       # list (pair address (list string)) : @some : list operation : @parameter%transfer : @storage
                        UPDATE 15;  # @some : list operation : @parameter%transfer : @storage
                        # svl.first_owner = False # @some : list operation : @parameter%transfer : @storage
                        PUSH bool False; # bool : @some : list operation : @parameter%transfer : @storage
                        UPDATE 9;   # @some : list operation : @parameter%transfer : @storage
                        SWAP;       # list operation : @some : @parameter%transfer : @storage
                      }
                      {
                        # svl.prev_owners_info = sp.cons((svl.owner, svl.curr_owner_info), svl.prev_owners_info) # list operation : @some : @parameter%transfer : @storage
                        DUP 2;      # @some : list operation : @some : @parameter%transfer : @storage
                        GET 15;     # list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        DUP 3;      # @some : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        GET 7;      # list string : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        DUP 4;      # @some : list string : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        GET 13;     # address : list string : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        PAIR;       # pair address (list string) : list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        CONS;       # list (pair address (list string)) : list operation : @some : @parameter%transfer : @storage
                        DIG 2;      # @some : list (pair address (list string)) : list operation : @parameter%transfer : @storage
                        SWAP;       # list (pair address (list string)) : @some : list operation : @parameter%transfer : @storage
                        UPDATE 15;  # @some : list operation : @parameter%transfer : @storage
                        SWAP;       # list operation : @some : @parameter%transfer : @storage
                      }; # list operation : @some : @parameter%transfer : @storage
                    SWAP;       # @some : list operation : @parameter%transfer : @storage
                    # svl.curr_owner_info = [''] # @some : list operation : @parameter%transfer : @storage
                    PUSH (list string) {""}; # list string : @some : list operation : @parameter%transfer : @storage
                    UPDATE 7;   # @some : list operation : @parameter%transfer : @storage
                    # svl.acceptRequest = False # @some : list operation : @parameter%transfer : @storage
                    PUSH bool False; # bool : @some : list operation : @parameter%transfer : @storage
                    UPDATE 3;   # @some : list operation : @parameter%transfer : @storage
                    # svl.owner = svl.request # @some : list operation : @parameter%transfer : @storage
                    DUP;        # @some : @some : list operation : @parameter%transfer : @storage
                    GET 19;     # address : @some : list operation : @parameter%transfer : @storage
                    UPDATE 13;  # @some : list operation : @parameter%transfer : @storage
                    SWAP;       # list operation : @some : @parameter%transfer : @storage
                    # self.data.svls[svl_key] = svl # list operation : @some : @parameter%transfer : @storage
                    DIG 3;      # @storage : list operation : @some : @parameter%transfer
                    DUP;        # @storage : @storage : list operation : @some : @parameter%transfer
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @some : @parameter%transfer
                    DIG 3;      # @some : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @parameter%transfer
                    SOME;       # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation : @parameter%transfer
                    DIG 4;      # @parameter%transfer : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation
                    UPDATE;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : list operation
                    UPDATE 16;  # @storage : list operation
                    SWAP;       # list operation : @storage
                  }
                  {
                    # == update ==
                    # svl = self.data.svls[params.svl_key] # @parameter%update : @storage
                    DUP 2;      # @storage : @parameter%update : @storage
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%update : @storage
                    DUP 2;      # @parameter%update : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%update : @storage
                    GET 9;      # string : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%update : @storage
                    GET;        # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @parameter%update : @storage
                    IF_NONE
                      {
                        PUSH int 154; # int : @parameter%update : @storage
                        FAILWITH;   # FAILED
                      }
                      {}; # @some : @parameter%update : @storage
                    # assert svl.owner == sp.sender, "Must be SVL owner" # @some : @parameter%update : @storage
                    SENDER;     # @sender : @some : @parameter%update : @storage
                    DUP 2;      # @some : @sender : @some : @parameter%update : @storage
                    GET 13;     # address : @sender : @some : @parameter%update : @storage
                    COMPARE;    # int : @some : @parameter%update : @storage
                    EQ;         # bool : @some : @parameter%update : @storage
                    IF
                      {}
                      {
                        PUSH string "Must be SVL owner"; # string : @some : @parameter%update : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%update : @storage
                    # assert len(params.curr_owner_info) < 100, "Owner limit reached" # @some : @parameter%update : @storage
                    PUSH nat 100; # nat : @some : @parameter%update : @storage
                    DUP 3;      # @parameter%update : nat : @some : @parameter%update : @storage
                    GET 5;      # list string : nat : @some : @parameter%update : @storage
                    SIZE;       # nat : nat : @some : @parameter%update : @storage
                    COMPARE;    # int : @some : @parameter%update : @storage
                    LT;         # bool : @some : @parameter%update : @storage
                    IF
                      {}
                      {
                        PUSH string "Owner limit reached"; # string : @some : @parameter%update : @storage
                        FAILWITH;   # FAILED
                      }; # @some : @parameter%update : @storage
                    # if svl.first_owner: # @some : @parameter%update : @storage
                    DUP;        # @some : @some : @parameter%update : @storage
                    GET 9;      # bool : @some : @parameter%update : @storage
                    IF
                      {
                        # svl.VIN = params.VIN # @some : @parameter%update : @storage
                        DUP 2;      # @parameter%update : @some : @parameter%update : @storage
                        CAR;        # string : @some : @parameter%update : @storage
                        UPDATE 1;   # @some : @parameter%update : @storage
                        # svl.brand = params.brand # @some : @parameter%update : @storage
                        DUP 2;      # @parameter%update : @some : @parameter%update : @storage
                        GET 3;      # string : @some : @parameter%update : @storage
                        UPDATE 5;   # @some : @parameter%update : @storage
                        # svl.model = params.model # @some : @parameter%update : @storage
                        DUP 2;      # @parameter%update : @some : @parameter%update : @storage
                        GET 7;      # string : @some : @parameter%update : @storage
                        UPDATE 11;  # @some : @parameter%update : @storage
                        # svl.year = params.year # @some : @parameter%update : @storage
                        DUP 2;      # @parameter%update : @some : @parameter%update : @storage
                        GET 10;     # string : @some : @parameter%update : @storage
                        UPDATE 20;  # @some : @parameter%update : @storage
                      }
                      {}; # @some : @parameter%update : @storage
                    # if not svl.first_owner: # @some : @parameter%update : @storage
                    DUP;        # @some : @some : @parameter%update : @storage
                    GET 9;      # bool : @some : @parameter%update : @storage
                    IF
                      {}
                      {
                        # totalCids = len(params.curr_owner_info) # @some : @parameter%update : @storage
                        DUP 2;      # @parameter%update : @some : @parameter%update : @storage
                        GET 5;      # list string : @some : @parameter%update : @storage
                        SIZE;       # nat : @some : @parameter%update : @storage
                        # for prev_owner_info in svl.prev_owners_info: # nat : @some : @parameter%update : @storage
                        DUP 2;      # @some : nat : @some : @parameter%update : @storage
                        GET 15;     # list (pair address (list string)) : nat : @some : @parameter%update : @storage
                        ITER
                          {
                            # totalCids += len(sp.snd(prev_owner_info)) # pair address (list string) : nat : @some : @parameter%update : @storage
                            CDR;        # list string : nat : @some : @parameter%update : @storage
                            SIZE;       # nat : nat : @some : @parameter%update : @storage
                            ADD;        # nat : @some : @parameter%update : @storage
                            # assert totalCids < 100, "Owner limit reached" # nat : @some : @parameter%update : @storage
                            PUSH nat 100; # nat : nat : @some : @parameter%update : @storage
                            DUP 2;      # nat : nat : nat : @some : @parameter%update : @storage
                            COMPARE;    # int : nat : @some : @parameter%update : @storage
                            LT;         # bool : nat : @some : @parameter%update : @storage
                            IF
                              {}
                              {
                                PUSH string "Owner limit reached"; # string : nat : @some : @parameter%update : @storage
                                FAILWITH;   # FAILED
                              }; # nat : @some : @parameter%update : @storage
                          }; # nat : @some : @parameter%update : @storage
                        DROP;       # @some : @parameter%update : @storage
                      }; # @some : @parameter%update : @storage
                    # svl.curr_owner_info = params.curr_owner_info # @some : @parameter%update : @storage
                    DUP 2;      # @parameter%update : @some : @parameter%update : @storage
                    GET 5;      # list string : @some : @parameter%update : @storage
                    UPDATE 7;   # @some : @parameter%update : @storage
                    # self.data.svls[params.svl_key] = svl # @some : @parameter%update : @storage
                    DIG 2;      # @storage : @some : @parameter%update
                    DUP;        # @storage : @storage : @some : @parameter%update
                    GET 16;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @some : @parameter%update
                    DIG 2;      # @some : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%update
                    SOME;       # option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage : @parameter%update
                    DIG 3;      # @parameter%update : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    GET 9;      # string : option (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE;     # big_map string (pair (string %VIN) (pair (bool %acceptRequest) (pair (string %brand) (pair (list %curr_owner_info string) (pair (bool %first_owner) (pair (string %model) (pair (address %owner) (pair (list %prev_owners_info (pair address (list string))) (pair (mutez %price) (pair (address %request) (string %year))))))))))) : @storage
                    UPDATE 16;  # @storage
                    NIL operation; # list operation : @storage
                  }; # list operation : @storage
              }; # list operation : @storage
          }; # list operation : @storage
      }; # list operation : @storage
    NIL operation; # list operation : list operation : @storage
    SWAP;       # list operation : list operation : @storage
    ITER
      {
        CONS;       # list operation : @storage
      }; # list operation : @storage
    PAIR;       # pair (list operation) @storage
  };